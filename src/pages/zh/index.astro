---
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/Navbar.astro";
import GameFeatures from "../../components/GameFeatures.astro";
import FAQ from "../../components/FAQ.astro";
import Footer from "../../components/Footer.astro";
import config from "../../config/config.json";
import i18next from "../../i18n/i18n";

const { game } = config;
await i18next.changeLanguage("zh");
const t = i18next.t.bind(i18next);
---

<Layout>
  <Navbar />
  <main
    class="min-h-screen bg-gradient-to-b from-indigo-50 via-purple-50 to-white"
  >
    <!-- Hero Section with Game -->
    <section class="pt-24">
      <!-- Hero 内容 -->
      <div class="text-center mb-16">
        <div class="mb-8 px-4">
          <h1
            class="text-4xl sm:text-5xl lg:text-6xl font-bold text-transparent tracking-tight gradient-title"
          >
            {t("hero.title")}
          </h1>
        </div>
        <p
          class="text-lg sm:text-xl text-indigo-700 max-w-2xl mx-auto px-4 leading-relaxed"
        >
          {t("hero.description")}
        </p>
      </div>

      <!-- 游戏容器 -->
      <div class="flex justify-center px-4 mb-8">
        <div
          class="game-container relative w-full max-w-[1200px] aspect-[16/9] bg-white rounded-xl shadow-[0_8px_30px_rgb(0,0,0,0.06)] overflow-hidden"
          data-game-src={game.iframeSrc}
        >
          <div
            id="start-container"
            class="absolute inset-0 flex items-center justify-center z-20"
          >
            <!-- 背景图片容器 -->
            <div class="absolute inset-0">
              <img
                src="/FiddleBops.webp"
                alt={t("title")}
                class="w-full h-full object-cover"
              />
              <!-- 叠加模糊和暗色效果 -->
              <div
                class="absolute inset-0 backdrop-blur-sm bg-gradient-to-b from-indigo-900/20 to-purple-900/20"
              >
              </div>
            </div>
            <!-- 开始按钮 -->
            <button
              id="start-button"
              class="relative px-8 py-4 bg-gradient-to-r from-indigo-500 to-purple-500 text-white text-xl rounded-xl hover:from-indigo-600 hover:to-purple-600 transform hover:scale-105 transition-all duration-300 focus:ring-4 focus:ring-purple-200 focus:ring-offset-2 shadow-lg"
              aria-label={t("startButton")}
            >
              {t("startButton")}
            </button>
          </div>

          <div class="absolute inset-0">
            <iframe
              id="game-frame"
              class="w-full h-full"
              title={t("title")}
              sandbox={game.sandboxAttributes}
              referrerpolicy="origin"
              loading="lazy"
              aria-label={`${t("title")} ${t("gameInterface")}`}></iframe>
          </div>

          <div
            id="error-container"
            class="hidden absolute inset-0 flex items-center justify-center bg-white z-10"
          >
            <div class="text-center">
              <p class="text-red-500 mb-4" role="alert">{t("loadingError")}</p>
              <button
                id="retry-button"
                class="px-6 py-3 bg-gradient-to-r from-indigo-500 to-purple-500 text-white rounded-xl hover:from-indigo-600 hover:to-purple-600 transition-all focus:ring-2 focus:ring-purple-200 focus:ring-offset-2"
                aria-label={t("retryButton")}
              >
                {t("retryButton")}
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- 游戏说明区域 -->
      <section
        id="how-to-play"
        class="py-16 bg-gradient-to-b from-white/80 to-white"
      >
        <div class="max-w-[1200px] mx-auto px-4">
          <h2 class="text-3xl font-bold text-center text-gray-900 mb-12">
            {t("howToPlay.title")}
          </h2>

          <!-- 游戏目标 -->
          <div class="mb-16 max-w-3xl mx-auto">
            <h3 class="text-2xl font-semibold text-gray-900 mb-6 text-center">
              {t("howToPlay.objective.title")}
            </h3>
            <p class="text-lg text-gray-600 leading-relaxed mb-8 text-center">
              {t("howToPlay.objective.description")}
            </p>
            <div class="grid sm:grid-cols-3 gap-6">
              {
                ["point1", "point2", "point3"].map((point, index) => (
                  <div class="bg-indigo-50 rounded-xl p-6 text-center">
                    <div class="w-12 h-12 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-4">
                      <span class="text-xl font-semibold text-indigo-600">
                        {index + 1}
                      </span>
                    </div>
                    <p class="text-gray-700">
                      {t(`howToPlay.objective.${point}`)}
                    </p>
                  </div>
                ))
              }
            </div>
          </div>

          <!-- 基本操作 -->
          <div class="mb-16">
            <h3 class="text-2xl font-semibold text-gray-900 mb-8 text-center">
              {t("howToPlay.controls.title")}
            </h3>
            <div class="grid md:grid-cols-2 gap-8">
              <div class="bg-white rounded-xl shadow-sm p-8">
                <h4
                  class="text-xl font-medium text-gray-800 mb-6 flex items-center"
                >
                  <span
                    class="w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center mr-3"
                  >
                    <span class="text-indigo-600">B</span>
                  </span>
                  {t("howToPlay.controls.basic.title")}
                </h4>
                <ul class="space-y-4">
                  {
                    ["point1", "point2", "point3"].map((point) => (
                      <li class="flex items-start">
                        <span class="w-6 h-6 bg-indigo-50 rounded-full flex-shrink-0 flex items-center justify-center mt-0.5 mr-3">
                          <span class="text-indigo-600">•</span>
                        </span>
                        <span class="text-gray-600">
                          {t(`howToPlay.controls.basic.${point}`)}
                        </span>
                      </li>
                    ))
                  }
                </ul>
              </div>
              <div class="bg-white rounded-xl shadow-sm p-8">
                <h4
                  class="text-xl font-medium text-gray-800 mb-6 flex items-center"
                >
                  <span
                    class="w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center mr-3"
                  >
                    <span class="text-indigo-600">A</span>
                  </span>
                  {t("howToPlay.controls.advanced.title")}
                </h4>
                <ul class="space-y-4">
                  {
                    ["point1", "point2", "point3"].map((point) => (
                      <li class="flex items-start">
                        <span class="w-6 h-6 bg-indigo-50 rounded-full flex-shrink-0 flex items-center justify-center mt-0.5 mr-3">
                          <span class="text-indigo-600">•</span>
                        </span>
                        <span class="text-gray-600">
                          {t(`howToPlay.controls.advanced.${point}`)}
                        </span>
                      </li>
                    ))
                  }
                </ul>
              </div>
            </div>
          </div>

          <!-- 得分规则 -->
          <div>
            <h3 class="text-2xl font-semibold text-gray-900 mb-8 text-center">
              {t("howToPlay.scoring.title")}
            </h3>
            <div
              class="bg-gradient-to-br from-indigo-50 to-purple-50 rounded-xl p-8 max-w-3xl mx-auto"
            >
              <ul class="space-y-6">
                {
                  ["rule1", "rule2", "rule3"].map((rule, index) => (
                    <li class="flex items-start">
                      <span class="flex-shrink-0 w-8 h-8 flex items-center justify-center rounded-full bg-indigo-100 text-indigo-600 mr-4 mt-0.5">
                        {index + 1}
                      </span>
                      <p class="text-gray-700 leading-relaxed">
                        {t(`howToPlay.scoring.${rule}`)}
                      </p>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
        </div>
      </section>

      <!-- 游戏特色展示 -->
      <GameFeatures />

      <!-- FAQ 区域 -->
      <FAQ />
    </section>

    <!-- 分享按钮 -->
    <div class="fixed bottom-4 right-4 z-50">
      <button
        class="share-toggle bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-full p-3 shadow-lg hover:scale-105 transition-transform"
        aria-label={t("shareButton")}
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 text-purple-600"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
          ></path>
        </svg>
      </button>
      <div
        class="share-menu hidden absolute bottom-full right-0 mb-2 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-xl p-3 shadow-lg"
      >
        <div
          class="a2a_kit a2a_kit_size_32 a2a_default_style flex flex-col gap-2"
        >
          <a
            class="a2a_dd hover:scale-110 transition-transform"
            href="https://www.addtoany.com/share"></a>
          <a class="a2a_button_facebook hover:scale-110 transition-transform"
          ></a>
          <a class="a2a_button_twitter hover:scale-110 transition-transform"
          ></a>
          <a class="a2a_button_whatsapp hover:scale-110 transition-transform"
          ></a>
          <a class="a2a_button_reddit hover:scale-110 transition-transform"></a>
          <a class="a2a_button_linkedin hover:scale-110 transition-transform"
          ></a>
        </div>
      </div>
    </div>
  </main>
  <Footer />
</Layout>

<script>
  const gameFrame = document.getElementById(
    "game-frame"
  ) as HTMLIFrameElement | null;
  const startContainer = document.getElementById("start-container");
  const startButton = document.getElementById("start-button");
  const errorContainer = document.getElementById("error-container");
  const retryButton = document.getElementById("retry-button");
  const gameContainer = document.querySelector(".game-container");
  const gameSrc = gameContainer?.getAttribute("data-game-src") || "";

  startButton?.addEventListener("click", startGame, { passive: true });

  function startGame() {
    startContainer?.classList.add("opacity-0");
    if (gameFrame) {
      gameFrame.src = gameSrc;
    }
    setTimeout(() => {
      startContainer?.classList.add("hidden");
    }, 300);
  }

  if (gameFrame) {
    gameFrame.addEventListener("error", showError, { passive: true });
  }

  retryButton?.addEventListener("click", retryLoading, { passive: true });

  document.addEventListener("touchstart", () => {}, { passive: true });
  document.addEventListener("wheel", () => {}, { passive: true });

  let audioContext: AudioContext | null = null;
  document.addEventListener(
    "click",
    () => {
      if (!audioContext) {
        audioContext = new AudioContext();
      }
    },
    { passive: true }
  );

  function showError() {
    errorContainer?.classList.remove("hidden");
  }

  function retryLoading() {
    errorContainer?.classList.add("hidden");
    if (gameFrame?.src) {
      const currentSrc = gameFrame.src;
      gameFrame.src = "";
      gameFrame.src = currentSrc;
    }
  }

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && !errorContainer?.classList.contains("hidden")) {
      retryLoading();
    }
  });

  // 分享按钮逻辑
  const shareToggle = document.querySelector(".share-toggle");
  const shareMenu = document.querySelector(".share-menu");

  // 移动端分享菜单切换
  shareToggle?.addEventListener("click", () => {
    shareMenu?.classList.toggle("hidden");
  });

  // 点击其他区域关闭分享菜单
  document.addEventListener("click", (e) => {
    const target = e.target as Element;
    if (
      shareMenu &&
      shareToggle &&
      !shareMenu.contains(target) &&
      !shareToggle.contains(target)
    ) {
      shareMenu.classList.add("hidden");
    }
  });
</script>

<style>
  .gradient-title {
    background: linear-gradient(
      90deg,
      rgb(79, 70, 229) 0%,
      rgb(147, 51, 234) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    padding-bottom: 0.2em;
    display: inline-block;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.2;
  }

  #start-container {
    transition: opacity 0.3s ease-in-out;
  }

  #start-container img {
    transition: transform 0.3s ease-in-out;
  }

  #start-container:hover img {
    transform: scale(1.05);
  }

  .share-menu {
    transform-origin: bottom right;
    transition:
      transform 0.2s ease-out,
      opacity 0.2s ease-out;
  }

  .share-menu:not(.hidden) {
    animation: slideIn 0.2s ease-out;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>
